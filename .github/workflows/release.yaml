name: release
on:
  pull_request:
    types: [ closed ]

jobs:
  Release:
    runs-on: ubuntu-20.04
    if: ${{ github.event.pull_request.merged == true && !startsWith(github.head_ref, 'no-release/') }
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup JDK11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Setup Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.sonar/cache
          key: ${{ runner.os }}-cache-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: ${{ runner.os }}-cache
      - id: compute-release-type
        name: Compute release type
        uses: ./.github/actions/compute-release-type
      - name: Bump version
        run: |
          ./gradlew incrementSemanticVersion --${{ steps.compute-release-type.outputs.release-type }}
          echo "VERSION=$(cat version.properties | grep version | cut -d'=' -f2)" >> $GITHUB_ENV
          git add version.properties
          git commit -m '[NO-CI] Bump version $VERSION'
          git push
          git tag $VERSION
          git push --tags
      - name: Publish plugin
        env:
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONARTYPE_KEY }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONARTYPE_PASSWORD }}
          ORG_GRADLE_PROJECT_gradle.publish.key: ${{ secrets.GRADLE_PUBLISH_KEY }}
          ORG_GRADLE_PROJECT_gradle.publish.secret: ${{ secrets.GRADLE_PUBLISH_SECRET }}
        run: ./gradlew -s publish
